// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package api

import (
	"net/http"
	"time"
)

// DefaultOperator - the default operator for query string query (AND or OR).
type DefaultOperator int

const (
	// DefaultOperatorAND can be used to set DefaultOperator to "AND"
	DefaultOperatorAND = iota
	// DefaultOperatorOR can be used to set DefaultOperator to "OR"
	DefaultOperatorOR = iota
)

// ExpandWildcards - whether to expand wildcard expression to concrete indices that are open, closed or both.
type ExpandWildcards int

const (
	// ExpandWildcardsOpen can be used to set ExpandWildcards to "open"
	ExpandWildcardsOpen = iota
	// ExpandWildcardsClosed can be used to set ExpandWildcards to "closed"
	ExpandWildcardsClosed = iota
	// ExpandWildcardsNone can be used to set ExpandWildcards to "none"
	ExpandWildcardsNone = iota
	// ExpandWildcardsAll can be used to set ExpandWildcards to "all"
	ExpandWildcardsAll = iota
)

// PercolateFormat - return an array of matching query IDs instead of objects.
type PercolateFormat int

const (
	// PercolateFormatIds can be used to set PercolateFormat to "ids"
	PercolateFormatIds = iota
)

// VersionType - specific version type.
type VersionType int

const (
	// VersionTypeInternal can be used to set VersionType to "internal"
	VersionTypeInternal = iota
	// VersionTypeExternal can be used to set VersionType to "external"
	VersionTypeExternal = iota
	// VersionTypeExternalGte can be used to set VersionType to "external_gte"
	VersionTypeExternalGte = iota
	// VersionTypeForce can be used to set VersionType to "force"
	VersionTypeForce = iota
)

// Option is a non-required API option that gets applied to an HTTP request.
type Option struct {
	name  string
	apply func(r *http.Request)
}

// WithAllowNoIndices - whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes "_all" string or when no indices have been specified).
func WithAllowNoIndices(allowNoIndices bool) *Option {
	return &Option{
		name: "WithAllowNoIndices",
		apply: func(r *http.Request) {
		},
	}
}

// WithAnalyzeWildcard - specify whether wildcards and prefix queries in the query string query should be analyzed (default: false).
func WithAnalyzeWildcard(analyzeWildcard bool) *Option {
	return &Option{
		name: "WithAnalyzeWildcard",
		apply: func(r *http.Request) {
		},
	}
}

// WithAnalyzer - the analyzer for the query string query.
func WithAnalyzer(analyzer string) *Option {
	return &Option{
		name: "WithAnalyzer",
		apply: func(r *http.Request) {
		},
	}
}

// WithBody - define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.
func WithBody(body map[string]interface{}) *Option {
	return &Option{
		name: "WithBody",
		apply: func(r *http.Request) {
		},
	}
}

// WithDefaultOperator - the default operator for query string query (AND or OR).
func WithDefaultOperator(defaultOperator DefaultOperator) *Option {
	return &Option{
		name: "WithDefaultOperator",
		apply: func(r *http.Request) {
		},
	}
}

// WithDf - the default field for query string query (default: _all).
func WithDf(df string) *Option {
	return &Option{
		name: "WithDf",
		apply: func(r *http.Request) {
		},
	}
}

// WithType - the type of the document.
func WithType(documentType string) *Option {
	return &Option{
		name: "WithType",
		apply: func(r *http.Request) {
		},
	}
}

// WithErrorTrace - include the stack trace of returned errors.
func WithErrorTrace(errorTrace bool) *Option {
	return &Option{
		name: "WithErrorTrace",
		apply: func(r *http.Request) {
		},
	}
}

// WithExpandWildcards - whether to expand wildcard expression to concrete indices that are open, closed or both.
func WithExpandWildcards(expandWildcards ExpandWildcards) *Option {
	return &Option{
		name: "WithExpandWildcards",
		apply: func(r *http.Request) {
		},
	}
}

// WithFieldStatistics - specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithFieldStatistics(fieldStatistics bool) *Option {
	return &Option{
		name: "WithFieldStatistics",
		apply: func(r *http.Request) {
		},
	}
}

// WithFields - a comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithFields(fields []string) *Option {
	return &Option{
		name: "WithFields",
		apply: func(r *http.Request) {
		},
	}
}

// WithFilterPath - a comma-separated list of filters used to reduce the respone.
func WithFilterPath(filterPath []string) *Option {
	return &Option{
		name: "WithFilterPath",
		apply: func(r *http.Request) {
		},
	}
}

// WithHuman - return human readable values for statistics.
func WithHuman(human bool) *Option {
	return &Option{
		name: "WithHuman",
		apply: func(r *http.Request) {
		},
	}
}

// WithID - substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.
func WithID(id string) *Option {
	return &Option{
		name: "WithID",
		apply: func(r *http.Request) {
		},
	}
}

// WithIds - a comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body.
func WithIds(ids []string) *Option {
	return &Option{
		name: "WithIds",
		apply: func(r *http.Request) {
		},
	}
}

// WithIgnoreUnavailable - whether specified concrete indices should be ignored when unavailable (missing or closed).
func WithIgnoreUnavailable(ignoreUnavailable bool) *Option {
	return &Option{
		name: "WithIgnoreUnavailable",
		apply: func(r *http.Request) {
		},
	}
}

// WithIndex - the index in which the document resides.
func WithIndex(index string) *Option {
	return &Option{
		name: "WithIndex",
		apply: func(r *http.Request) {
		},
	}
}

// WithLenient - specify whether format-based query failures (such as providing text to a numeric field) should be ignored.
func WithLenient(lenient bool) *Option {
	return &Option{
		name: "WithLenient",
		apply: func(r *http.Request) {
		},
	}
}

// WithOffsets - specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithOffsets(offsets bool) *Option {
	return &Option{
		name: "WithOffsets",
		apply: func(r *http.Request) {
		},
	}
}

// WithParent - parent id of documents. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithParent(parent string) *Option {
	return &Option{
		name: "WithParent",
		apply: func(r *http.Request) {
		},
	}
}

// WithPayloads - specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithPayloads(payloads bool) *Option {
	return &Option{
		name: "WithPayloads",
		apply: func(r *http.Request) {
		},
	}
}

// WithPercolateFormat - return an array of matching query IDs instead of objects.
func WithPercolateFormat(percolateFormat PercolateFormat) *Option {
	return &Option{
		name: "WithPercolateFormat",
		apply: func(r *http.Request) {
		},
	}
}

// WithPercolateIndex - the index to percolate the document into. Defaults to index.
func WithPercolateIndex(percolateIndex string) *Option {
	return &Option{
		name: "WithPercolateIndex",
		apply: func(r *http.Request) {
		},
	}
}

// WithPercolatePreference - which shard to prefer when executing the percolate request.
func WithPercolatePreference(percolatePreference string) *Option {
	return &Option{
		name: "WithPercolatePreference",
		apply: func(r *http.Request) {
		},
	}
}

// WithPercolateRouting - the routing value to use when percolating the existing document.
func WithPercolateRouting(percolateRouting string) *Option {
	return &Option{
		name: "WithPercolateRouting",
		apply: func(r *http.Request) {
		},
	}
}

// WithPercolateType - the type to percolate document into. Defaults to type.
func WithPercolateType(percolateType string) *Option {
	return &Option{
		name: "WithPercolateType",
		apply: func(r *http.Request) {
		},
	}
}

// WithPositions - specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithPositions(positions bool) *Option {
	return &Option{
		name: "WithPositions",
		apply: func(r *http.Request) {
		},
	}
}

// WithPreference - specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithPreference(preference string) *Option {
	return &Option{
		name: "WithPreference",
		apply: func(r *http.Request) {
		},
	}
}

// WithPretty - pretty format the returned JSON response.
func WithPretty(pretty bool) *Option {
	return &Option{
		name: "WithPretty",
		apply: func(r *http.Request) {
		},
	}
}

// WithRealtime - specifies if requests are real-time as opposed to near-real-time (default: true).
func WithRealtime(realtime bool) *Option {
	return &Option{
		name: "WithRealtime",
		apply: func(r *http.Request) {
		},
	}
}

// WithRefresh - should the effected indexes be refreshed?
func WithRefresh(refresh bool) *Option {
	return &Option{
		name: "WithRefresh",
		apply: func(r *http.Request) {
		},
	}
}

// WithRequestsPerSecond - the throttle to set on this request in sub-requests per second. -1 means no throttle.
func WithRequestsPerSecond(requestsPerSecond int) *Option {
	return &Option{
		name: "WithRequestsPerSecond",
		apply: func(r *http.Request) {
		},
	}
}

// WithRouting - specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithRouting(routing string) *Option {
	return &Option{
		name: "WithRouting",
		apply: func(r *http.Request) {
		},
	}
}

// WithScroll - specify how long a consistent view of the index should be maintained for scrolled search.
func WithScroll(scroll time.Time) *Option {
	return &Option{
		name: "WithScroll",
		apply: func(r *http.Request) {
		},
	}
}

// WithScrollID - the scroll ID.
func WithScrollID(scrollID string) *Option {
	return &Option{
		name: "WithScrollID",
		apply: func(r *http.Request) {
		},
	}
}

// WithScrollIDParam - the scroll ID for scrolled search.
func WithScrollIDParam(scrollIDParam string) *Option {
	return &Option{
		name: "WithScrollIDParam",
		apply: func(r *http.Request) {
		},
	}
}

// WithSlices - the number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
func WithSlices(slices int) *Option {
	return &Option{
		name: "WithSlices",
		apply: func(r *http.Request) {
		},
	}
}

// WithSource - true or false to return the _source field or not, or a list of fields to return.
func WithSource(source []string) *Option {
	return &Option{
		name: "WithSource",
		apply: func(r *http.Request) {
		},
	}
}

// WithSourceExclude - a list of fields to exclude from the returned _source field.
func WithSourceExclude(sourceExclude []string) *Option {
	return &Option{
		name: "WithSourceExclude",
		apply: func(r *http.Request) {
		},
	}
}

// WithSourceInclude - a list of fields to extract and return from the _source field.
func WithSourceInclude(sourceInclude []string) *Option {
	return &Option{
		name: "WithSourceInclude",
		apply: func(r *http.Request) {
		},
	}
}

// WithSourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithSourceParam(sourceParam string) *Option {
	return &Option{
		name: "WithSourceParam",
		apply: func(r *http.Request) {
		},
	}
}

// WithTaskID - the task id to rethrottle.
func WithTaskID(taskID string) *Option {
	return &Option{
		name: "WithTaskID",
		apply: func(r *http.Request) {
		},
	}
}

// WithTermStatistics - specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
func WithTermStatistics(termStatistics bool) *Option {
	return &Option{
		name: "WithTermStatistics",
		apply: func(r *http.Request) {
		},
	}
}

// WithTimeout - time each individual bulk request should wait for shards that are unavailable.
func WithTimeout(timeout time.Time) *Option {
	return &Option{
		name: "WithTimeout",
		apply: func(r *http.Request) {
		},
	}
}

// WithVersion - explicit version number for concurrency control.
func WithVersion(version int) *Option {
	return &Option{
		name: "WithVersion",
		apply: func(r *http.Request) {
		},
	}
}

// WithVersionType - specific version type.
func WithVersionType(versionType VersionType) *Option {
	return &Option{
		name: "WithVersionType",
		apply: func(r *http.Request) {
		},
	}
}

// WithWaitForActiveShards - sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to "all" for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1).
func WithWaitForActiveShards(waitForActiveShards string) *Option {
	return &Option{
		name: "WithWaitForActiveShards",
		apply: func(r *http.Request) {
		},
	}
}

// WithWaitForCompletion - should the request should block until the reindex is complete.
func WithWaitForCompletion(waitForCompletion bool) *Option {
	return &Option{
		name: "WithWaitForCompletion",
		apply: func(r *http.Request) {
		},
	}
}

var (
	supportedOptions = map[string]map[string]struct{}{
		"Mtermvectors": map[string]struct{}{
			"WithIndex":           struct{}{},
			"WithType":            struct{}{},
			"WithFieldStatistics": struct{}{},
			"WithFields":          struct{}{},
			"WithIds":             struct{}{},
			"WithOffsets":         struct{}{},
			"WithParent":          struct{}{},
			"WithPayloads":        struct{}{},
			"WithPositions":       struct{}{},
			"WithPreference":      struct{}{},
			"WithRealtime":        struct{}{},
			"WithRouting":         struct{}{},
			"WithTermStatistics":  struct{}{},
			"WithVersion":         struct{}{},
			"WithVersionType":     struct{}{},
			"WithBody":            struct{}{},
			"WithErrorTrace":      struct{}{},
			"WithFilterPath":      struct{}{},
			"WithHuman":           struct{}{},
			"WithPretty":          struct{}{},
			"WithSourceParam":     struct{}{},
		},
		"Percolate": map[string]struct{}{
			"WithID":                  struct{}{},
			"WithAllowNoIndices":      struct{}{},
			"WithExpandWildcards":     struct{}{},
			"WithIgnoreUnavailable":   struct{}{},
			"WithPercolateFormat":     struct{}{},
			"WithPercolateIndex":      struct{}{},
			"WithPercolatePreference": struct{}{},
			"WithPercolateRouting":    struct{}{},
			"WithPercolateType":       struct{}{},
			"WithPreference":          struct{}{},
			"WithRouting":             struct{}{},
			"WithVersion":             struct{}{},
			"WithVersionType":         struct{}{},
			"WithBody":                struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"Reindex": map[string]struct{}{
			"WithRefresh":             struct{}{},
			"WithRequestsPerSecond":   struct{}{},
			"WithSlices":              struct{}{},
			"WithTimeout":             struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithWaitForCompletion":   struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"ReindexRethrottle": map[string]struct{}{
			"WithTaskID":      struct{}{},
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Ping": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Search": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithType":              struct{}{},
			"WithSource":            struct{}{},
			"WithSourceExclude":     struct{}{},
			"WithSourceInclude":     struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithAnalyzeWildcard":   struct{}{},
			"WithAnalyzer":          struct{}{},
			"WithBatchedReduceSize": struct{}{},
			"WithDefaultOperator":   struct{}{},
			"WithDf":                struct{}{},
			"WithDocvalueFields":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithExplain":           struct{}{},
			"WithFielddataFields":   struct{}{},
			"WithFrom":              struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLenient":           struct{}{},
			"WithPreference":        struct{}{},
			"WithQ":                 struct{}{},
			"WithRequestCache":      struct{}{},
			"WithRouting":           struct{}{},
			"WithScroll":            struct{}{},
			"WithSearchType":        struct{}{},
			"WithSize":              struct{}{},
			"WithSort":              struct{}{},
			"WithStats":             struct{}{},
			"WithStoredFields":      struct{}{},
			"WithSuggestField":      struct{}{},
			"WithSuggestMode":       struct{}{},
			"WithSuggestSize":       struct{}{},
			"WithSuggestText":       struct{}{},
			"WithTerminateAfter":    struct{}{},
			"WithTimeout":           struct{}{},
			"WithTrackScores":       struct{}{},
			"WithTypedKeys":         struct{}{},
			"WithVersion":           struct{}{},
			"WithBody":              struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"FieldStats": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithFields":            struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLevel":             struct{}{},
			"WithBody":              struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"DeleteByQuery": map[string]struct{}{
			"WithType":                struct{}{},
			"WithSource":              struct{}{},
			"WithSourceExclude":       struct{}{},
			"WithSourceInclude":       struct{}{},
			"WithAllowNoIndices":      struct{}{},
			"WithAnalyzeWildcard":     struct{}{},
			"WithAnalyzer":            struct{}{},
			"WithConflicts":           struct{}{},
			"WithDefaultOperator":     struct{}{},
			"WithDf":                  struct{}{},
			"WithExpandWildcards":     struct{}{},
			"WithFrom":                struct{}{},
			"WithIgnoreUnavailable":   struct{}{},
			"WithLenient":             struct{}{},
			"WithPreference":          struct{}{},
			"WithQ":                   struct{}{},
			"WithRefresh":             struct{}{},
			"WithRequestCache":        struct{}{},
			"WithRequestsPerSecond":   struct{}{},
			"WithRouting":             struct{}{},
			"WithScroll":              struct{}{},
			"WithScrollSize":          struct{}{},
			"WithSearchTimeout":       struct{}{},
			"WithSearchType":          struct{}{},
			"WithSize":                struct{}{},
			"WithSlices":              struct{}{},
			"WithSort":                struct{}{},
			"WithStats":               struct{}{},
			"WithTerminateAfter":      struct{}{},
			"WithTimeout":             struct{}{},
			"WithVersion":             struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithWaitForCompletion":   struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"Create": map[string]struct{}{
			"WithParent":              struct{}{},
			"WithPipeline":            struct{}{},
			"WithRefresh":             struct{}{},
			"WithRouting":             struct{}{},
			"WithTimeout":             struct{}{},
			"WithTimestamp":           struct{}{},
			"WithTTL":                 struct{}{},
			"WithVersion":             struct{}{},
			"WithVersionType":         struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"Delete": map[string]struct{}{
			"WithParent":              struct{}{},
			"WithRefresh":             struct{}{},
			"WithRouting":             struct{}{},
			"WithTimeout":             struct{}{},
			"WithVersion":             struct{}{},
			"WithVersionType":         struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"SearchShards": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithType":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLocal":             struct{}{},
			"WithPreference":        struct{}{},
			"WithRouting":           struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"PutTemplate": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"CountPercolate": map[string]struct{}{
			"WithID":                struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithPercolateIndex":    struct{}{},
			"WithPercolateType":     struct{}{},
			"WithPreference":        struct{}{},
			"WithRouting":           struct{}{},
			"WithVersion":           struct{}{},
			"WithVersionType":       struct{}{},
			"WithBody":              struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"RenderSearchTemplate": map[string]struct{}{
			"WithID":          struct{}{},
			"WithBody":        struct{}{},
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"DeleteScript": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Suggest": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithPreference":        struct{}{},
			"WithRouting":           struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Update": map[string]struct{}{
			"WithSource":              struct{}{},
			"WithSourceExclude":       struct{}{},
			"WithSourceInclude":       struct{}{},
			"WithFields":              struct{}{},
			"WithLang":                struct{}{},
			"WithParent":              struct{}{},
			"WithRefresh":             struct{}{},
			"WithRetryOnConflict":     struct{}{},
			"WithRouting":             struct{}{},
			"WithTimeout":             struct{}{},
			"WithTimestamp":           struct{}{},
			"WithTTL":                 struct{}{},
			"WithVersion":             struct{}{},
			"WithVersionType":         struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithBody":                struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"Info": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"PutScript": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Scroll": map[string]struct{}{
			"WithScrollID":      struct{}{},
			"WithScroll":        struct{}{},
			"WithScrollIDParam": struct{}{},
			"WithBody":          struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Exists": map[string]struct{}{
			"WithSource":        struct{}{},
			"WithSourceExclude": struct{}{},
			"WithSourceInclude": struct{}{},
			"WithParent":        struct{}{},
			"WithPreference":    struct{}{},
			"WithRealtime":      struct{}{},
			"WithRefresh":       struct{}{},
			"WithRouting":       struct{}{},
			"WithStoredFields":  struct{}{},
			"WithVersion":       struct{}{},
			"WithVersionType":   struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Index": map[string]struct{}{
			"WithID":                  struct{}{},
			"WithOpType":              struct{}{},
			"WithParent":              struct{}{},
			"WithPipeline":            struct{}{},
			"WithRefresh":             struct{}{},
			"WithRouting":             struct{}{},
			"WithTimeout":             struct{}{},
			"WithTimestamp":           struct{}{},
			"WithTTL":                 struct{}{},
			"WithVersion":             struct{}{},
			"WithVersionType":         struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"ExistsSource": map[string]struct{}{
			"WithSource":        struct{}{},
			"WithSourceExclude": struct{}{},
			"WithSourceInclude": struct{}{},
			"WithParent":        struct{}{},
			"WithPreference":    struct{}{},
			"WithRealtime":      struct{}{},
			"WithRefresh":       struct{}{},
			"WithRouting":       struct{}{},
			"WithVersion":       struct{}{},
			"WithVersionType":   struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Get": map[string]struct{}{
			"WithSource":        struct{}{},
			"WithSourceExclude": struct{}{},
			"WithSourceInclude": struct{}{},
			"WithParent":        struct{}{},
			"WithPreference":    struct{}{},
			"WithRealtime":      struct{}{},
			"WithRefresh":       struct{}{},
			"WithRouting":       struct{}{},
			"WithStoredFields":  struct{}{},
			"WithVersion":       struct{}{},
			"WithVersionType":   struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Count": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithType":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithAnalyzeWildcard":   struct{}{},
			"WithAnalyzer":          struct{}{},
			"WithDefaultOperator":   struct{}{},
			"WithDf":                struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLenient":           struct{}{},
			"WithMinScore":          struct{}{},
			"WithPreference":        struct{}{},
			"WithQ":                 struct{}{},
			"WithRouting":           struct{}{},
			"WithBody":              struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"ClearScroll": map[string]struct{}{
			"WithScrollID":    struct{}{},
			"WithBody":        struct{}{},
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Mget": map[string]struct{}{
			"WithIndex":         struct{}{},
			"WithType":          struct{}{},
			"WithSource":        struct{}{},
			"WithSourceExclude": struct{}{},
			"WithSourceInclude": struct{}{},
			"WithPreference":    struct{}{},
			"WithRealtime":      struct{}{},
			"WithRefresh":       struct{}{},
			"WithRouting":       struct{}{},
			"WithStoredFields":  struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"MsearchTemplate": map[string]struct{}{
			"WithIndex":       struct{}{},
			"WithType":        struct{}{},
			"WithSearchType":  struct{}{},
			"WithTypedKeys":   struct{}{},
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"SearchTemplate": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithType":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithExplain":           struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithPreference":        struct{}{},
			"WithProfile":           struct{}{},
			"WithRouting":           struct{}{},
			"WithScroll":            struct{}{},
			"WithSearchType":        struct{}{},
			"WithTypedKeys":         struct{}{},
			"WithBody":              struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Explain": map[string]struct{}{
			"WithSource":          struct{}{},
			"WithSourceExclude":   struct{}{},
			"WithSourceInclude":   struct{}{},
			"WithAnalyzeWildcard": struct{}{},
			"WithAnalyzer":        struct{}{},
			"WithDefaultOperator": struct{}{},
			"WithDf":              struct{}{},
			"WithLenient":         struct{}{},
			"WithParent":          struct{}{},
			"WithPreference":      struct{}{},
			"WithQ":               struct{}{},
			"WithRouting":         struct{}{},
			"WithStoredFields":    struct{}{},
			"WithBody":            struct{}{},
			"WithErrorTrace":      struct{}{},
			"WithFilterPath":      struct{}{},
			"WithHuman":           struct{}{},
			"WithPretty":          struct{}{},
			"WithSourceParam":     struct{}{},
		},
		"GetTemplate": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Termvectors": map[string]struct{}{
			"WithID":              struct{}{},
			"WithFieldStatistics": struct{}{},
			"WithFields":          struct{}{},
			"WithOffsets":         struct{}{},
			"WithParent":          struct{}{},
			"WithPayloads":        struct{}{},
			"WithPositions":       struct{}{},
			"WithPreference":      struct{}{},
			"WithRealtime":        struct{}{},
			"WithRouting":         struct{}{},
			"WithTermStatistics":  struct{}{},
			"WithVersion":         struct{}{},
			"WithVersionType":     struct{}{},
			"WithBody":            struct{}{},
			"WithErrorTrace":      struct{}{},
			"WithFilterPath":      struct{}{},
			"WithHuman":           struct{}{},
			"WithPretty":          struct{}{},
			"WithSourceParam":     struct{}{},
		},
		"Bulk": map[string]struct{}{
			"WithIndex":               struct{}{},
			"WithType":                struct{}{},
			"WithSource":              struct{}{},
			"WithSourceExclude":       struct{}{},
			"WithSourceInclude":       struct{}{},
			"WithFields":              struct{}{},
			"WithPipeline":            struct{}{},
			"WithRefresh":             struct{}{},
			"WithRouting":             struct{}{},
			"WithTimeout":             struct{}{},
			"WithTypeParam":           struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"DeleteTemplate": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"UpdateByQuery": map[string]struct{}{
			"WithType":                struct{}{},
			"WithSource":              struct{}{},
			"WithSourceExclude":       struct{}{},
			"WithSourceInclude":       struct{}{},
			"WithAllowNoIndices":      struct{}{},
			"WithAnalyzeWildcard":     struct{}{},
			"WithAnalyzer":            struct{}{},
			"WithConflicts":           struct{}{},
			"WithDefaultOperator":     struct{}{},
			"WithDf":                  struct{}{},
			"WithExpandWildcards":     struct{}{},
			"WithFrom":                struct{}{},
			"WithIgnoreUnavailable":   struct{}{},
			"WithLenient":             struct{}{},
			"WithPipeline":            struct{}{},
			"WithPreference":          struct{}{},
			"WithQ":                   struct{}{},
			"WithRefresh":             struct{}{},
			"WithRequestCache":        struct{}{},
			"WithRequestsPerSecond":   struct{}{},
			"WithRouting":             struct{}{},
			"WithScroll":              struct{}{},
			"WithScrollSize":          struct{}{},
			"WithSearchTimeout":       struct{}{},
			"WithSearchType":          struct{}{},
			"WithSize":                struct{}{},
			"WithSlices":              struct{}{},
			"WithSort":                struct{}{},
			"WithStats":               struct{}{},
			"WithTerminateAfter":      struct{}{},
			"WithTimeout":             struct{}{},
			"WithVersion":             struct{}{},
			"WithVersionType":         struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithWaitForCompletion":   struct{}{},
			"WithBody":                struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"GetScript": map[string]struct{}{
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"FieldCaps": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithFields":            struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithBody":              struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"GetSource": map[string]struct{}{
			"WithSource":        struct{}{},
			"WithSourceExclude": struct{}{},
			"WithSourceInclude": struct{}{},
			"WithParent":        struct{}{},
			"WithPreference":    struct{}{},
			"WithRealtime":      struct{}{},
			"WithRefresh":       struct{}{},
			"WithRouting":       struct{}{},
			"WithVersion":       struct{}{},
			"WithVersionType":   struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Mpercolate": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithType":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Msearch": map[string]struct{}{
			"WithIndex":                 struct{}{},
			"WithType":                  struct{}{},
			"WithMaxConcurrentSearches": struct{}{},
			"WithSearchType":            struct{}{},
			"WithTypedKeys":             struct{}{},
			"WithErrorTrace":            struct{}{},
			"WithFilterPath":            struct{}{},
			"WithHuman":                 struct{}{},
			"WithPretty":                struct{}{},
			"WithSourceParam":           struct{}{},
		},
	}
)
