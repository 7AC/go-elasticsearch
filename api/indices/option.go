// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"time"

	"github.com/elastic/go-elasticsearch/transport"
)

// DefaultOperator - the default operator for query string query (AND or OR).
type DefaultOperator int

const (
	// DefaultOperatorAND can be used to set DefaultOperator to "AND"
	DefaultOperatorAND = iota
	// DefaultOperatorOR can be used to set DefaultOperator to "OR"
	DefaultOperatorOR = iota
)

// ExpandWildcards - whether to expand wildcard expression to concrete indices that are open, closed or both.
type ExpandWildcards int

const (
	// ExpandWildcardsOpen can be used to set ExpandWildcards to "open"
	ExpandWildcardsOpen = iota
	// ExpandWildcardsClosed can be used to set ExpandWildcards to "closed"
	ExpandWildcardsClosed = iota
	// ExpandWildcardsNone can be used to set ExpandWildcards to "none"
	ExpandWildcardsNone = iota
	// ExpandWildcardsAll can be used to set ExpandWildcards to "all"
	ExpandWildcardsAll = iota
)

// Format - format of the output.
type Format int

const (
	// FormatDetailed can be used to set Format to "detailed"
	FormatDetailed = iota
	// FormatText can be used to set Format to "text"
	FormatText = iota
)

// Level - return stats aggregated at cluster, index or shard level.
type Level int

const (
	// LevelCluster can be used to set Level to "cluster"
	LevelCluster = iota
	// LevelIndices can be used to set Level to "indices"
	LevelIndices = iota
	// LevelShards can be used to set Level to "shards"
	LevelShards = iota
)

// Option is a non-required API option that gets applied to an HTTP request.
type Option struct {
	name  string
	apply func(r *transport.Request)
}

// WithActiveOnly - display only those recoveries that are currently on-going.
func WithActiveOnly(activeOnly bool) Option {
	return Option{
		name: "WithActiveOnly",
		apply: func(r *transport.Request) {
		},
	}
}

// WithAllShards - execute validation on all shards instead of one random shard per index.
func WithAllShards(allShards bool) Option {
	return Option{
		name: "WithAllShards",
		apply: func(r *transport.Request) {
		},
	}
}

// WithAllowNoIndices - whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes "_all" string or when no indices have been specified).
func WithAllowNoIndices(allowNoIndices bool) Option {
	return Option{
		name: "WithAllowNoIndices",
		apply: func(r *transport.Request) {
		},
	}
}

// WithAnalyzeWildcard - specify whether wildcard and prefix queries should be analyzed (default: false).
func WithAnalyzeWildcard(analyzeWildcard bool) Option {
	return Option{
		name: "WithAnalyzeWildcard",
		apply: func(r *transport.Request) {
		},
	}
}

// WithAnalyzer - the name of the analyzer to use.
func WithAnalyzer(analyzer string) Option {
	return Option{
		name: "WithAnalyzer",
		apply: func(r *transport.Request) {
		},
	}
}

// WithAttributes - a comma-separated list of token attributes to output, this parameter works only with "explain=true".
func WithAttributes(attributes []string) Option {
	return Option{
		name: "WithAttributes",
		apply: func(r *transport.Request) {
		},
	}
}

// WithBody - the configuration for the index ("settings" and "mappings").
func WithBody(body map[string]interface{}) Option {
	return Option{
		name: "WithBody",
		apply: func(r *transport.Request) {
		},
	}
}

// WithCharFilter - a comma-separated list of character filters to use for the analysis.
func WithCharFilter(charFilter []string) Option {
	return Option{
		name: "WithCharFilter",
		apply: func(r *transport.Request) {
		},
	}
}

// WithCompletionFields - a comma-separated list of fields for "fielddata" and "suggest" index metric (supports wildcards).
func WithCompletionFields(completionFields []string) Option {
	return Option{
		name: "WithCompletionFields",
		apply: func(r *transport.Request) {
		},
	}
}

// WithCreate - whether the index template should only be added if new or can also replace an existing one.
func WithCreate(create bool) Option {
	return Option{
		name: "WithCreate",
		apply: func(r *transport.Request) {
		},
	}
}

// WithDefaultOperator - the default operator for query string query (AND or OR).
func WithDefaultOperator(defaultOperator DefaultOperator) Option {
	return Option{
		name: "WithDefaultOperator",
		apply: func(r *transport.Request) {
		},
	}
}

// WithDetailed - whether to display detailed information about shard recovery.
func WithDetailed(detailed bool) Option {
	return Option{
		name: "WithDetailed",
		apply: func(r *transport.Request) {
		},
	}
}

// WithDf - the field to use as default where no field prefix is given in the query string.
func WithDf(df string) Option {
	return Option{
		name: "WithDf",
		apply: func(r *transport.Request) {
		},
	}
}

// WithType - a comma-separated list of document types.
func WithType(documentType []string) Option {
	return Option{
		name: "WithType",
		apply: func(r *transport.Request) {
		},
	}
}

// WithDryRun - if set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false.
func WithDryRun(dryRun bool) Option {
	return Option{
		name: "WithDryRun",
		apply: func(r *transport.Request) {
		},
	}
}

// WithErrorTrace - include the stack trace of returned errors.
func WithErrorTrace(errorTrace bool) Option {
	return Option{
		name: "WithErrorTrace",
		apply: func(r *transport.Request) {
		},
	}
}

// WithExpandWildcards - whether to expand wildcard expression to concrete indices that are open, closed or both.
func WithExpandWildcards(expandWildcards ExpandWildcards) Option {
	return Option{
		name: "WithExpandWildcards",
		apply: func(r *transport.Request) {
		},
	}
}

// WithExplain - with "true", outputs more advanced details. (default: false).
func WithExplain(explain bool) Option {
	return Option{
		name: "WithExplain",
		apply: func(r *transport.Request) {
		},
	}
}

// WithFeature - a comma-separated list of features.
func WithFeature(feature []string) Option {
	return Option{
		name: "WithFeature",
		apply: func(r *transport.Request) {
		},
	}
}

// WithField - use the analyzer configured for this field (instead of passing the analyzer name).
func WithField(field string) Option {
	return Option{
		name: "WithField",
		apply: func(r *transport.Request) {
		},
	}
}

// WithFielddataFields - a comma-separated list of fields for "fielddata" index metric (supports wildcards).
func WithFielddataFields(fielddataFields []string) Option {
	return Option{
		name: "WithFielddataFields",
		apply: func(r *transport.Request) {
		},
	}
}

// WithFields - a comma-separated list of fields for "fielddata" and "completion" index metric (supports wildcards).
func WithFields(fields []string) Option {
	return Option{
		name: "WithFields",
		apply: func(r *transport.Request) {
		},
	}
}

// WithFilter - a comma-separated list of filters to use for the analysis.
func WithFilter(filter []string) Option {
	return Option{
		name: "WithFilter",
		apply: func(r *transport.Request) {
		},
	}
}

// WithFilterPath - a comma-separated list of filters used to reduce the respone.
func WithFilterPath(filterPath []string) Option {
	return Option{
		name: "WithFilterPath",
		apply: func(r *transport.Request) {
		},
	}
}

// WithFlatSettings - return settings in flat format (default: false).
func WithFlatSettings(flatSettings bool) Option {
	return Option{
		name: "WithFlatSettings",
		apply: func(r *transport.Request) {
		},
	}
}

// WithFormat - format of the output.
func WithFormat(format Format) Option {
	return Option{
		name: "WithFormat",
		apply: func(r *transport.Request) {
		},
	}
}

// WithGroups - a comma-separated list of search groups for "search" index metric.
func WithGroups(groups []string) Option {
	return Option{
		name: "WithGroups",
		apply: func(r *transport.Request) {
		},
	}
}

// WithHuman - return human readable values for statistics.
func WithHuman(human bool) Option {
	return Option{
		name: "WithHuman",
		apply: func(r *transport.Request) {
		},
	}
}

// WithIgnore - ignores the specified HTTP status codes.
func WithIgnore(ignore []int) Option {
	return Option{
		name: "WithIgnore",
		apply: func(r *transport.Request) {
			for _, status := range ignore {
				r.IgnoredStatuses[status] = struct{}{}
			}
		},
	}
}

// WithIgnoreUnavailable - whether specified concrete indices should be ignored when unavailable (missing or closed).
func WithIgnoreUnavailable(ignoreUnavailable bool) Option {
	return Option{
		name: "WithIgnoreUnavailable",
		apply: func(r *transport.Request) {
		},
	}
}

// WithIncludeSegmentFileSizes - whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested).
func WithIncludeSegmentFileSizes(includeSegmentFileSizes bool) Option {
	return Option{
		name: "WithIncludeSegmentFileSizes",
		apply: func(r *transport.Request) {
		},
	}
}

// WithIndex - the name of the index to scope the operation.
func WithIndex(index string) Option {
	return Option{
		name: "WithIndex",
		apply: func(r *transport.Request) {
		},
	}
}

// WithIndexList - a comma-separated list of index names; use "_all" or empty string for all indices.
func WithIndexList(indexList []string) Option {
	return Option{
		name: "WithIndexList",
		apply: func(r *transport.Request) {
		},
	}
}

// WithIndexParam - the name of the index to scope the operation.
func WithIndexParam(indexParam string) Option {
	return Option{
		name: "WithIndexParam",
		apply: func(r *transport.Request) {
		},
	}
}

// WithLevel - return stats aggregated at cluster, index or shard level.
func WithLevel(level Level) Option {
	return Option{
		name: "WithLevel",
		apply: func(r *transport.Request) {
		},
	}
}

// WithLocal - return local information, do not retrieve the state from master node (default: false).
func WithLocal(local bool) Option {
	return Option{
		name: "WithLocal",
		apply: func(r *transport.Request) {
		},
	}
}

// WithMasterTimeout - explicit operation timeout for connection to master node.
func WithMasterTimeout(masterTimeout time.Duration) Option {
	return Option{
		name: "WithMasterTimeout",
		apply: func(r *transport.Request) {
		},
	}
}

// WithMetric - limit the information returned the specific metrics.
func WithMetric(metric []string) Option {
	return Option{
		name: "WithMetric",
		apply: func(r *transport.Request) {
		},
	}
}

// WithName - the comma separated names of the index templates.
func WithName(name []string) Option {
	return Option{
		name: "WithName",
		apply: func(r *transport.Request) {
		},
	}
}

// WithNewIndex - the name of the rollover index.
func WithNewIndex(newIndex string) Option {
	return Option{
		name: "WithNewIndex",
		apply: func(r *transport.Request) {
		},
	}
}

// WithOrder - the order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers).
func WithOrder(order int) Option {
	return Option{
		name: "WithOrder",
		apply: func(r *transport.Request) {
		},
	}
}

// WithPreferLocal - with "true", specify that a local shard should be used if available, with "false", use a random shard (default: true).
func WithPreferLocal(preferLocal bool) Option {
	return Option{
		name: "WithPreferLocal",
		apply: func(r *transport.Request) {
		},
	}
}

// WithPretty - pretty format the returned JSON response.
func WithPretty(pretty bool) Option {
	return Option{
		name: "WithPretty",
		apply: func(r *transport.Request) {
		},
	}
}

// WithSourceParam - the URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.
func WithSourceParam(sourceParam string) Option {
	return Option{
		name: "WithSourceParam",
		apply: func(r *transport.Request) {
		},
	}
}

// WithText - the text on which the analysis should be performed (when request body is not used).
func WithText(text []string) Option {
	return Option{
		name: "WithText",
		apply: func(r *transport.Request) {
		},
	}
}

// WithTimeout - explicit operation timeout.
func WithTimeout(timeout time.Duration) Option {
	return Option{
		name: "WithTimeout",
		apply: func(r *transport.Request) {
		},
	}
}

// WithTokenizer - the name of the tokenizer to use for the analysis.
func WithTokenizer(tokenizer string) Option {
	return Option{
		name: "WithTokenizer",
		apply: func(r *transport.Request) {
		},
	}
}

// WithTypes - a comma-separated list of document types for the "indexing" index metric.
func WithTypes(types []string) Option {
	return Option{
		name: "WithTypes",
		apply: func(r *transport.Request) {
		},
	}
}

// WithUpdateAllTypes - whether to update the mapping for all fields with the same name across all types or not.
func WithUpdateAllTypes(updateAllTypes bool) Option {
	return Option{
		name: "WithUpdateAllTypes",
		apply: func(r *transport.Request) {
		},
	}
}

// WithWaitForActiveShards - set the number of active shards to wait for before the operation returns.
func WithWaitForActiveShards(waitForActiveShards string) Option {
	return Option{
		name: "WithWaitForActiveShards",
		apply: func(r *transport.Request) {
		},
	}
}

var (
	supportedOptions = map[string]map[string]struct{}{
		"Delete": map[string]struct{}{
			"WithMasterTimeout": struct{}{},
			"WithTimeout":       struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"PutTemplate": map[string]struct{}{
			"WithCreate":        struct{}{},
			"WithFlatSettings":  struct{}{},
			"WithMasterTimeout": struct{}{},
			"WithOrder":         struct{}{},
			"WithTimeout":       struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"GetMapping": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithType":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Recovery": map[string]struct{}{
			"WithIndex":       struct{}{},
			"WithActiveOnly":  struct{}{},
			"WithDetailed":    struct{}{},
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithIgnore":      struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Forcemerge": map[string]struct{}{
			"WithIndex":              struct{}{},
			"WithAllowNoIndices":     struct{}{},
			"WithExpandWildcards":    struct{}{},
			"WithFlush":              struct{}{},
			"WithIgnoreUnavailable":  struct{}{},
			"WithMaxNumSegments":     struct{}{},
			"WithOnlyExpungeDeletes": struct{}{},
			"WithWaitForMerge":       struct{}{},
			"WithErrorTrace":         struct{}{},
			"WithFilterPath":         struct{}{},
			"WithHuman":              struct{}{},
			"WithIgnore":             struct{}{},
			"WithPretty":             struct{}{},
			"WithSourceParam":        struct{}{},
		},
		"Rollover": map[string]struct{}{
			"WithNewIndex":            struct{}{},
			"WithDryRun":              struct{}{},
			"WithMasterTimeout":       struct{}{},
			"WithTimeout":             struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithBody":                struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithIgnore":              struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"PutMapping": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithMasterTimeout":     struct{}{},
			"WithTimeout":           struct{}{},
			"WithUpdateAllTypes":    struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"ClearCache": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithFieldData":         struct{}{},
			"WithFielddata":         struct{}{},
			"WithFields":            struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithIndexParam":        struct{}{},
			"WithQuery":             struct{}{},
			"WithRecycler":          struct{}{},
			"WithRequest":           struct{}{},
			"WithRequestCache":      struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"ShardStores": map[string]struct{}{
			"WithIndex":             struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithStatus":            struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"UpdateAliases": map[string]struct{}{
			"WithMasterTimeout": struct{}{},
			"WithTimeout":       struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Upgrade": map[string]struct{}{
			"WithIndex":               struct{}{},
			"WithAllowNoIndices":      struct{}{},
			"WithExpandWildcards":     struct{}{},
			"WithIgnoreUnavailable":   struct{}{},
			"WithOnlyAncientSegments": struct{}{},
			"WithWaitForCompletion":   struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithIgnore":              struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"ValidateQuery": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithType":              struct{}{},
			"WithAllShards":         struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithAnalyzeWildcard":   struct{}{},
			"WithAnalyzer":          struct{}{},
			"WithDefaultOperator":   struct{}{},
			"WithDf":                struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithExplain":           struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLenient":           struct{}{},
			"WithQ":                 struct{}{},
			"WithRewrite":           struct{}{},
			"WithBody":              struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Analyze": map[string]struct{}{
			"WithIndex":       struct{}{},
			"WithAnalyzer":    struct{}{},
			"WithAttributes":  struct{}{},
			"WithCharFilter":  struct{}{},
			"WithExplain":     struct{}{},
			"WithField":       struct{}{},
			"WithFilter":      struct{}{},
			"WithFormat":      struct{}{},
			"WithIndexParam":  struct{}{},
			"WithPreferLocal": struct{}{},
			"WithText":        struct{}{},
			"WithTokenizer":   struct{}{},
			"WithBody":        struct{}{},
			"WithErrorTrace":  struct{}{},
			"WithFilterPath":  struct{}{},
			"WithHuman":       struct{}{},
			"WithIgnore":      struct{}{},
			"WithPretty":      struct{}{},
			"WithSourceParam": struct{}{},
		},
		"Exists": map[string]struct{}{
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithFlatSettings":      struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithIncludeDefaults":   struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"GetUpgrade": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Open": map[string]struct{}{
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithMasterTimeout":     struct{}{},
			"WithTimeout":           struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Close": map[string]struct{}{
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithMasterTimeout":     struct{}{},
			"WithTimeout":           struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"DeleteAlias": map[string]struct{}{
			"WithMasterTimeout": struct{}{},
			"WithTimeout":       struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"GetTemplate": map[string]struct{}{
			"WithName":          struct{}{},
			"WithFlatSettings":  struct{}{},
			"WithLocal":         struct{}{},
			"WithMasterTimeout": struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"DeleteTemplate": map[string]struct{}{
			"WithMasterTimeout": struct{}{},
			"WithTimeout":       struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"GetAlias": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithName":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Segments": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithVerbose":           struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Stats": map[string]struct{}{
			"WithIndexList":               struct{}{},
			"WithMetric":                  struct{}{},
			"WithCompletionFields":        struct{}{},
			"WithFielddataFields":         struct{}{},
			"WithFields":                  struct{}{},
			"WithGroups":                  struct{}{},
			"WithIncludeSegmentFileSizes": struct{}{},
			"WithLevel":                   struct{}{},
			"WithTypes":                   struct{}{},
			"WithErrorTrace":              struct{}{},
			"WithFilterPath":              struct{}{},
			"WithHuman":                   struct{}{},
			"WithIgnore":                  struct{}{},
			"WithPretty":                  struct{}{},
			"WithSourceParam":             struct{}{},
		},
		"GetSettings": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithName":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithFlatSettings":      struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithIncludeDefaults":   struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"PutAlias": map[string]struct{}{
			"WithMasterTimeout": struct{}{},
			"WithTimeout":       struct{}{},
			"WithBody":          struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Shrink": map[string]struct{}{
			"WithMasterTimeout":       struct{}{},
			"WithTimeout":             struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithBody":                struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithIgnore":              struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"GetFieldMapping": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithType":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithIncludeDefaults":   struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"PutSettings": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithFlatSettings":      struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithMasterTimeout":     struct{}{},
			"WithPreserveExisting":  struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Create": map[string]struct{}{
			"WithMasterTimeout":       struct{}{},
			"WithTimeout":             struct{}{},
			"WithUpdateAllTypes":      struct{}{},
			"WithWaitForActiveShards": struct{}{},
			"WithBody":                struct{}{},
			"WithErrorTrace":          struct{}{},
			"WithFilterPath":          struct{}{},
			"WithHuman":               struct{}{},
			"WithIgnore":              struct{}{},
			"WithPretty":              struct{}{},
			"WithSourceParam":         struct{}{},
		},
		"Refresh": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithForce":             struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"ExistsType": map[string]struct{}{
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"FlushSynced": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"Get": map[string]struct{}{
			"WithFeature":           struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithFlatSettings":      struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithIncludeDefaults":   struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"ExistsAlias": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithName":              struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithLocal":             struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
		"ExistsTemplate": map[string]struct{}{
			"WithName":          struct{}{},
			"WithFlatSettings":  struct{}{},
			"WithLocal":         struct{}{},
			"WithMasterTimeout": struct{}{},
			"WithErrorTrace":    struct{}{},
			"WithFilterPath":    struct{}{},
			"WithHuman":         struct{}{},
			"WithIgnore":        struct{}{},
			"WithPretty":        struct{}{},
			"WithSourceParam":   struct{}{},
		},
		"Flush": map[string]struct{}{
			"WithIndexList":         struct{}{},
			"WithAllowNoIndices":    struct{}{},
			"WithExpandWildcards":   struct{}{},
			"WithForce":             struct{}{},
			"WithIgnoreUnavailable": struct{}{},
			"WithWaitIfOngoing":     struct{}{},
			"WithErrorTrace":        struct{}{},
			"WithFilterPath":        struct{}{},
			"WithHuman":             struct{}{},
			"WithIgnore":            struct{}{},
			"WithPretty":            struct{}{},
			"WithSourceParam":       struct{}{},
		},
	}
)
